---
- hosts: localhost
  name: Export Ansible Automation Platform 2.4 configuration for post-migration tasks
  gather_facts: true
  vars: 
    output_dir: export

  tasks:
    - name: Ensure output directory exists
      ansible.builtin.file:
        path: "{{ output_dir }}"
        state: directory

    - name: Export everything from AAP 2.4
      awx.awx.export:
        all: true
        validate_certs: false
        controller_host: "{{ controller_host }}"
        controller_password: "{{ controller_password }}"
        controller_username: "{{ controller_username }}"
      register: export

    # - name: Debug export
    #   ansible.builtin.debug:
    #     msg: "{{ export }}"    

    - name: Create separate YAML files for each resource type
      ansible.builtin.copy:
        content: "{{ export.assets[item] | to_nice_yaml }}"
        dest: "{{ output_dir }}/{{ item }}_export_{{ ansible_date_time.iso8601 }}.yml"
      loop: "{{ export.assets.keys() | list }}"
      when: export.assets[item] | length > 0

    # - name: Export only users from AAP 2.4
    #   awx.awx.export:
    #     users: 'all'
    #     controller_host: "{{ controller_host }}"
    #     controller_password: "{{ controller_password }}"
    #     controller_username: "{{ controller_username }}"
    #   register: export

    # - name: Debug export
    #   ansible.builtin.debug:
    #     msg: "{{ export }}"

    # - name: Extract usernames and job_template roles
    #   set_fact:
    #     users_job_template_roles: >-
    #       {{ 
    #         users_job_template_roles | default([]) + [ {
    #         'username': item.username,
    #         'job_template_roles': (
    #           item.related.roles
    #           | selectattr('content_object', 'defined')
    #           | selectattr('content_object.type', 'equalto', 'job_template')
    #           | list
    #         )
    #       } ] }}
    #   loop: "{{ export.assets.users }}"
    #   loop_control:
    #     loop_var: item

    # - name: Filter out admin and users without job_template roles
    #   set_fact:
    #     filtered_users: >-
    #       {{
    #         users_job_template_roles
    #         | rejectattr('username', 'equalto', 'admin')
    #         | list
    #       }}

    # - name: Show trimmed users as YAML
    #   debug:
    #     var: filtered_users

    # - name: Write filtered users to YAML file
    #   copy:
    #     dest: "{{ output_dir }}/filtered_users.yaml"
    #     content: "{{ filtered_users | to_nice_yaml }}"
